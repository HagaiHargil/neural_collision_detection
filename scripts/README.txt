This file explains the pipeline, and the usage of each script file in this directory.


Pipeline Overview:
	Original data, represented by centers + radii (matlab db)
	|
	| Matlab code
	|
	V
	Triangle mesh
	|
	| Running ncd on pre-selected centers
	|
	V
	Set of locations with zero/very few collisions [1]
	|
	| Original data + run_aggregator.py + aggregator.py + gather_agg_results.py
	|
	V
	DB of more accurate collision count, with control of distance threshold [2]
	|
	| neuron_parser.py
	|
	V
	Array of overall collision count per voxel (over neurons)

[1] - Good point for visualization, using collisions_to_cubes.py + verify_zeros.py
[2] - Good point to make sure we are correct, since we calculate collisions with two different methods


Main scripts:
	aggregator.py
		Usage: aggregator.py <vascular data> <neuron data> <location> <rotation> <results file>
		Receives vascular and neural data, and calculates manually the collisions/proximity sites for the given position.
		Outputs the results to 'results file'.

	run_aggregator.py
		Usage: run_aggregator.py <base dir> <out dir>
		Runs aggregator.py for every position with zero collisions, found by ncd

	gather_agg_results.py
		Usage: gather_agg_results.py <input directory> <output file>
		Gather the results of aggregator.py into a single db (csv file).
		Columns are: run_id, neuron_id, vascular_id, neuron_location, neuron_rotation, collisions

	neuron_parser.py
		Usage: neuron_parser.py <input file> <output directory>
		Gets a db generated by gather_agg_results.py. Calculate an array of collisions per voxel over all positions.
		It also outputs some statistics to output_directory.


Utils:
	create_cube.py
		Usage: create_cube.py <output file> <radius> <location>
		Creates an .obj file, with a single cube of given radius (half edge size) and location.
	extend.py
		 extend.py <input filename> <output filename>
		 Extends Centers.csv to have more centers, so we have more data. Used only for R&D.
	collisions_to_cubes.py
		Usage: collisions_to_cubes.py <input file> <output dir>
		Receives a list of collisions (locations), and creates multiple .obj files, each represent a collision as a cube.
		Used to visualize collisions on a neuorn/blood vessel.
	find_enclosing_box.py
		Usage: find_enclosing_box.py <object>
		Gets an object (.csv/.obj file), and outputs its bounding box. Used for debugging, and as a utility by other scripts.
	verify_zeros.py
		Usage: verify_zeros.py <base dir>
		Runs ncd in verify mode on each position with zero collisions, for debugging purposes.

Other:
	plotter.py
		Plots a general 2D array, using matplotlib. Not really needed right now.
	plotter_3d.py
		Just an example from the web. Not really needed right now.
	parser.py
		No usage, shouldn't be run as a standalone tool.

